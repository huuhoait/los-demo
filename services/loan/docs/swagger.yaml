basePath: /v1
definitions:
  domain.AccountType:
    enum:
    - checking
    - savings
    type: string
    x-enum-varnames:
    - AccountChecking
    - AccountSavings
  domain.Address:
    properties:
      city:
        example: New York
        type: string
      country:
        example: USA
        type: string
      residence_type:
        allOf:
        - $ref: '#/definitions/domain.ResidenceType'
        example: own
      state:
        example: NY
        type: string
      street_address:
        example: 123 Main St
        type: string
      time_at_address_months:
        description: months
        example: 24
        minimum: 0
        type: integer
      zip_code:
        example: "10001"
        type: string
    required:
    - city
    - country
    - residence_type
    - state
    - street_address
    - time_at_address_months
    - zip_code
    type: object
  domain.ApplicationState:
    enum:
    - initiated
    - pre_qualified
    - documents_submitted
    - identity_verified
    - underwriting
    - manual_review
    - approved
    - denied
    - documents_signed
    - funded
    - active
    - closed
    type: string
    x-enum-varnames:
    - StateInitiated
    - StatePreQualified
    - StateDocumentsSubmitted
    - StateIdentityVerified
    - StateUnderwriting
    - StateManualReview
    - StateApproved
    - StateDenied
    - StateDocumentsSigned
    - StateFunded
    - StateActive
    - StateClosed
  domain.ApplicationStatus:
    enum:
    - draft
    - submitted
    - under_review
    - approved
    - denied
    - funded
    - active
    - closed
    type: string
    x-enum-varnames:
    - StatusDraft
    - StatusSubmitted
    - StatusUnderReview
    - StatusApproved
    - StatusDenied
    - StatusFunded
    - StatusActive
    - StatusClosed
  domain.BankingInfo:
    properties:
      account_number:
        example: "1234567890"
        type: string
      account_type:
        allOf:
        - $ref: '#/definitions/domain.AccountType'
        example: checking
      bank_name:
        example: Chase Bank
        type: string
      routing_number:
        example: "021000021"
        type: string
    required:
    - account_number
    - account_type
    - bank_name
    - routing_number
    type: object
  domain.CreateApplicationRequest:
    description: Request to create a new loan application with user information
    properties:
      annual_income:
        example: 75000
        minimum: 0
        type: number
      employment_status:
        allOf:
        - $ref: '#/definitions/domain.EmploymentStatus'
        example: full_time
      loan_amount:
        description: Loan application details
        example: 25000
        maximum: 50000
        minimum: 5000
        type: number
      loan_purpose:
        allOf:
        - $ref: '#/definitions/domain.LoanPurpose'
        example: debt_consolidation
      monthly_debt_payments:
        example: 1500
        minimum: 0
        type: number
      monthly_income:
        example: 6250
        minimum: 0
        type: number
      requested_term_months:
        example: 60
        maximum: 84
        minimum: 12
        type: integer
      user:
        allOf:
        - $ref: '#/definitions/domain.User'
        description: User information for application
    required:
    - annual_income
    - employment_status
    - loan_amount
    - loan_purpose
    - monthly_income
    - requested_term_months
    - user
    type: object
  domain.EmploymentInfo:
    properties:
      employer_name:
        example: ABC Company
        type: string
      job_title:
        example: Software Engineer
        type: string
      time_employed_months:
        description: months
        example: 36
        minimum: 0
        type: integer
      work_email:
        example: john.doe@abccompany.com
        type: string
      work_phone:
        example: "+1234567890"
        type: string
    required:
    - employer_name
    - job_title
    - time_employed_months
    - work_phone
    type: object
  domain.EmploymentStatus:
    enum:
    - full_time
    - part_time
    - self_employed
    - retired
    - unemployed
    - student
    type: string
    x-enum-varnames:
    - EmploymentFullTime
    - EmploymentPartTime
    - EmploymentSelfEmployed
    - EmploymentRetired
    - EmploymentUnemployed
    - EmploymentStudent
  domain.LoanApplication:
    properties:
      annual_income:
        type: number
      application_number:
        type: string
      created_at:
        type: string
      current_state:
        $ref: '#/definitions/domain.ApplicationState'
      employment_status:
        $ref: '#/definitions/domain.EmploymentStatus'
      id:
        type: string
      loan_amount:
        type: number
      loan_purpose:
        $ref: '#/definitions/domain.LoanPurpose'
      monthly_debt_payments:
        type: number
      monthly_income:
        type: number
      requested_term_months:
        type: integer
      risk_score:
        type: integer
      status:
        $ref: '#/definitions/domain.ApplicationStatus'
      updated_at:
        type: string
      user_id:
        type: string
      workflow_id:
        type: string
    type: object
  domain.LoanPurpose:
    enum:
    - debt_consolidation
    - home_improvement
    - medical
    - vacation
    - wedding
    - major_purchase
    - other
    type: string
    x-enum-varnames:
    - PurposeDebtConsolidation
    - PurposeHomeImprovement
    - PurposeMedical
    - PurposeVacation
    - PurposeWedding
    - PurposeMajorPurchase
    - PurposeOther
  domain.PreQualifyRequest:
    description: Request to perform loan pre-qualification
    properties:
      annual_income:
        example: 75000
        minimum: 0
        type: number
      employment_status:
        allOf:
        - $ref: '#/definitions/domain.EmploymentStatus'
        example: full_time
      loan_amount:
        example: 25000
        maximum: 50000
        minimum: 5000
        type: number
      monthly_debt_payments:
        example: 1500
        minimum: 0
        type: number
    required:
    - annual_income
    - employment_status
    - loan_amount
    type: object
  domain.PreQualifyResult:
    description: Result of loan pre-qualification
    properties:
      dti_ratio:
        example: 0.24
        type: number
      max_interest_rate:
        example: 12
        type: number
      max_loan_amount:
        example: 50000
        type: number
      message:
        example: You are pre-qualified for a loan
        type: string
      min_interest_rate:
        example: 8.5
        type: number
      qualified:
        example: true
        type: boolean
      recommended_terms:
        items:
          type: integer
        type: array
    type: object
  domain.ResidenceType:
    enum:
    - own
    - rent
    - family
    - other
    type: string
    x-enum-varnames:
    - ResidenceOwn
    - ResidenceRent
    - ResidenceFamily
    - ResidenceOther
  domain.User:
    properties:
      address:
        $ref: '#/definitions/domain.Address'
      banking_info:
        $ref: '#/definitions/domain.BankingInfo'
      created_at:
        type: string
      date_of_birth:
        example: "1990-01-01"
        type: string
      email:
        example: john.doe@example.com
        type: string
      employment_info:
        $ref: '#/definitions/domain.EmploymentInfo'
      first_name:
        example: John
        type: string
      id:
        type: string
      last_name:
        example: Doe
        type: string
      phone_number:
        example: "+1234567890"
        type: string
      ssn:
        example: "123456789"
        type: string
      updated_at:
        type: string
    required:
    - address
    - banking_info
    - date_of_birth
    - email
    - employment_info
    - first_name
    - last_name
    - phone_number
    - ssn
    type: object
  middleware.ErrorDetail:
    description: Detailed error information with comprehensive error details
    properties:
      code:
        example: LOAN_020
        type: string
      description:
        example: 'Validation error: parsing time "1990-01-01" as "2006-01-02T15:04:05Z07:00":
          cannot parse "" as "T"; date_format: Date must be in ISO 8601 format (e.g.,
          1990-01-01T00:00:00Z)'
        type: string
      field:
        example: date_of_birth
        type: string
      message:
        example: Invalid request format - please check your JSON data and field validation
        type: string
      metadata:
        additionalProperties: true
        type: object
    type: object
  middleware.ErrorResponse:
    description: Standardized error response
    properties:
      data: {}
      error:
        $ref: '#/definitions/middleware.ErrorDetail'
      metadata:
        additionalProperties: true
        type: object
      success:
        example: false
        type: boolean
    type: object
  middleware.SuccessResponse:
    description: Standardized success response
    properties:
      data: {}
      message:
        example: Application created successfully
        type: string
      metadata:
        additionalProperties: true
        type: object
      success:
        example: true
        type: boolean
    type: object
  workflow.TaskStatus:
    properties:
      endTime:
        type: string
      inputData:
        additionalProperties: true
        type: object
      outputData:
        additionalProperties: true
        type: object
      referenceTaskName:
        type: string
      startTime:
        type: string
      status:
        type: string
      taskId:
        type: string
      taskType:
        type: string
    type: object
  workflow.WorkflowStatus:
    properties:
      input:
        additionalProperties: true
        type: object
      output:
        additionalProperties: true
        type: object
      status:
        type: string
      tasks:
        items:
          $ref: '#/definitions/workflow.TaskStatus'
        type: array
      workflowId:
        type: string
    type: object
  workflow.DocumentCollectionTask:
    properties:
      taskType:
        description: Type of task
        example: "document_collection"
        type: string
      taskReferenceName:
        description: Reference name for the task
        example: "document_collection_ref"
        type: string
      inputParameters:
        properties:
          applicationId:
            description: ID of the loan application
            example: "80588df0-d3b1-4e33-b984-385cb55e85ce"
            type: string
          userId:
            description: ID of the user
            example: "550e8400-e29b-41d4-a716-446655440001"
            type: string
          requiredDocuments:
            description: List of required document types
            example:
            - "income_verification"
            - "employment_verification"
            - "bank_statements"
            - "identification"
            items:
              type: string
            type: array
        required:
        - applicationId
        - userId
        - requiredDocuments
        type: object
      outputKeys:
        description: Expected output keys from the task
        example:
        - "documentsCollected"
        - "incomeVerification"
        - "employmentVerification"
        - "bankStatements"
        - "identificationDocument"
        - "collectionCompletedAt"
        items:
          type: string
        type: array
      timeoutSeconds:
        description: Task timeout in seconds
        example: 86400
        type: integer
      type:
        description: Task type (HUMAN for manual intervention)
        example: "HUMAN"
        type: string
    required:
    - taskType
    - taskReferenceName
    - inputParameters
    - outputKeys
    - timeoutSeconds
    - type
    type: object
  workflow.TaskFactory:
    properties:
      supportedTaskTypes:
        description: List of supported task types
        example:
        - "validate_application"
        - "document_collection"
        - "identity_verification"
        - "update_application_state"
        - "finalize_loan_decision"
        items:
          type: string
        type: array
      taskHandlers:
        description: Available task handlers
        additionalProperties:
          $ref: '#/definitions/workflow.TaskHandler'
        type: object
    required:
    - supportedTaskTypes
    type: object
  workflow.TaskHandler:
    properties:
      taskType:
        description: Type of task this handler can process
        example: "document_collection"
        type: string
      description:
        description: Description of what the task handler does
        example: "Handles document collection and validation for loan applications"
        type: string
      inputSchema:
        description: Expected input schema for the task
        type: object
      outputSchema:
        description: Expected output schema from the task
        type: object
    required:
    - taskType
    - description
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: A comprehensive loan origination service with internationalization
    support for Vietnamese and English, featuring Netflix Conductor workflow integration
    and document management capabilities. The API provides comprehensive error responses
    with detailed validation information including human-readable error messages,
    field-specific error details, validation error context, and structured error
    metadata for programmatic error handling. Document collection tasks support
    multiple document types including income verification, employment verification,
    bank statements, and identification documents with automated validation and
    workflow integration.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Loan Service API
  version: "1.0"
definitions:
  interfaces.DocumentUploadRequest:
    properties:
      documentType:
        description: Type of document being uploaded
        example: "income_verification"
        type: string
      fileName:
        description: Name of the uploaded file
        example: "paystub_2025_08.pdf"
        type: string
      fileSize:
        description: Size of the file in bytes
        example: 2048576
        type: integer
      metadata:
        additionalProperties: true
        description: Additional metadata about the document
        example:
          employer: "Tech Corp Inc"
          period: "2025-08-01 to 2025-08-15"
          grossIncome: 5000.00
          netIncome: 3800.00
        type: object
    required:
    - documentType
    - fileName
    - fileSize
    type: object
  interfaces.DocumentUploadResponse:
    properties:
      success:
        description: Whether the document upload was successful
        example: true
        type: boolean
      documentId:
        description: Unique identifier for the uploaded document
        example: "doc_12345678-1234-1234-1234-123456789012"
        type: string
      message:
        description: Success message
        example: "Document uploaded successfully"
        type: string
      uploadedAt:
        description: Timestamp when the document was uploaded
        example: "2025-08-15T17:36:36.352+0700"
        type: string
    required:
    - success
    - documentId
    - message
    - uploadedAt
    type: object
  interfaces.DocumentCollectionStatus:
    properties:
      applicationId:
        description: ID of the loan application
        example: "80588df0-d3b1-4e33-b984-385cb55e85ce"
        type: string
      userId:
        description: ID of the user
        example: "550e8400-e29b-41d4-a716-446655440001"
        type: string
      status:
        description: Overall status of document collection
        example: "in_progress"
        type: string
      documents:
        items:
          $ref: '#/definitions/interfaces.DocumentInfo'
        type: array
      requiredDocuments:
        description: List of required document types
        example:
        - "income_verification"
        - "employment_verification"
        - "bank_statements"
        - "identification"
        type: array
      collectedCount:
        description: Number of documents collected
        example: 2
        type: integer
      totalRequired:
        description: Total number of required documents
        example: 4
        type: integer
      lastUpdated:
        description: Last update timestamp
        example: "2025-08-15T17:36:36.352+0700"
        type: string
    required:
    - applicationId
    - userId
    - status
    - documents
    - requiredDocuments
    - collectedCount
    - totalRequired
    - lastUpdated
    type: object
  interfaces.DocumentInfo:
    properties:
      documentType:
        description: Type of document
        example: "income_verification"
        type: string
      fileName:
        description: Name of the document file
        example: "paystub_2025_08.pdf"
        type: string
      fileSize:
        description: Size of the file in bytes
        example: 2048576
        type: integer
      uploadedAt:
        description: When the document was uploaded
        example: "2025-08-15T17:36:36.352+0700"
        type: string
      status:
        description: Status of the document
        example: "uploaded"
        type: string
      metadata:
        additionalProperties: true
        description: Additional document metadata
        example:
          employer: "Tech Corp Inc"
          period: "2025-08-01 to 2025-08-15"
          grossIncome: 5000.00
          netIncome: 3800.00
        type: object
    required:
    - documentType
    - fileName
    - fileSize
    - uploadedAt
    - status
    type: object
  interfaces.DocumentCompletionRequest:
    properties:
      completionReason:
        description: Reason for marking collection as complete
        example: "All required documents collected and validated"
        type: string
      completionNotes:
        description: Additional notes about the completion
        example: "Documents meet all requirements for loan processing"
        type: string
      completedBy:
        description: User who marked the collection as complete
        example: "loan_officer_123"
        type: string
    required:
    - completionReason
    - completionNotes
    type: object
  interfaces.DocumentCompletionResponse:
    properties:
      success:
        description: Whether the completion was successful
        example: true
        type: boolean
      message:
        description: Success message
        example: "Document collection marked as complete"
        type: string
      completedAt:
        description: Timestamp when collection was marked complete
        example: "2025-08-15T17:36:36.352+0700"
        type: string
      applicationId:
        description: ID of the loan application
        example: "80588df0-d3b1-4e33-b984-385cb55e85ce"
        type: string
      nextStep:
        description: Next step in the loan process
        example: "Proceed to identity verification"
        type: string
    required:
    - success
    - message
    - completedAt
    - applicationId
    - nextStep
    type: object
paths:
  /health:
    get:
      consumes:
      - application/json
      description: Check the health status of the loan service
      produces:
      - application/json
      responses:
        "200":
          description: Service is healthy
          schema:
            allOf:
            - $ref: '#/definitions/middleware.SuccessResponse'
            - properties:
                data:
                  additionalProperties: true
                  type: object
              type: object
      summary: Health check
      tags:
      - Health
  /loans/applications:
    get:
      consumes:
      - application/json
      description: Retrieve all loan applications associated with the authenticated
        user
      parameters:
      - description: Language preference (en, vi)
        in: header
        name: X-Language
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Applications retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/middleware.SuccessResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/domain.LoanApplication'
                  type: array
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middleware.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/middleware.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get all loan applications for the current user
      tags:
      - Applications
    post:
      consumes:
      - application/json
      description: Create a new loan application with the provided details
      parameters:
      - description: Loan application details
        in: body
        name: application
        required: true
        schema:
          $ref: '#/definitions/domain.CreateApplicationRequest'
      - description: Language preference (en, vi)
        in: header
        name: X-Language
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Application created successfully
          schema:
            allOf:
            - $ref: '#/definitions/middleware.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/domain.LoanApplication'
              type: object
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/middleware.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middleware.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/middleware.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create a new loan application
      tags:
      - Applications
  /loans/applications/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve a specific loan application by its ID
      parameters:
      - description: Application ID
        in: path
        name: id
        required: true
        type: string
      - description: Language preference (en, vi)
        in: header
        name: X-Language
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Application retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/middleware.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/domain.LoanApplication'
              type: object
        "400":
          description: Invalid application ID
          schema:
            $ref: '#/definitions/middleware.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middleware.ErrorResponse'
        "404":
          description: Application not found
          schema:
            $ref: '#/definitions/middleware.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/middleware.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get a loan application by ID
      tags:
      - Applications
  /loans/prequalify:
    post:
      consumes:
      - application/json
      description: Check if a user qualifies for a loan based on income, debt, and
        other factors
      parameters:
      - description: Pre-qualification request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/domain.PreQualifyRequest'
      - description: Language preference (en, vi)
        in: header
        name: X-Language
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Pre-qualification completed
          schema:
            allOf:
            - $ref: '#/definitions/middleware.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/domain.PreQualifyResult'
              type: object
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/middleware.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middleware.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/middleware.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Perform loan pre-qualification
      tags:
      - Pre-qualification
  /loans/stats:
    get:
      consumes:
      - application/json
      description: Retrieve statistics about loan applications (admin only)
      parameters:
      - description: Filter by status
        in: query
        name: status
        type: string
      - description: Filter by state
        in: query
        name: state
        type: string
      - description: 'Number of days to look back (default: 30)'
        in: query
        name: days
        type: integer
      - description: Language preference (en, vi)
        in: header
        name: X-Language
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Statistics retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/middleware.SuccessResponse'
            - properties:
                data:
                  additionalProperties: true
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middleware.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/middleware.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/middleware.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get application statistics
      tags:
      - Admin
  /workflows/{id}/pause:
    post:
      consumes:
      - application/json
      description: Pause a running workflow execution
      parameters:
      - description: Workflow ID
        in: path
        name: id
        required: true
        type: string
      - description: Language preference (en, vi)
        in: header
        name: X-Language
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Workflow paused successfully
          schema:
            allOf:
            - $ref: '#/definitions/middleware.SuccessResponse'
            - properties:
                data:
                  additionalProperties: true
                  type: object
              type: object
        "400":
          description: Invalid workflow ID
          schema:
            $ref: '#/definitions/middleware.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middleware.ErrorResponse'
        "404":
          description: Workflow not found
          schema:
            $ref: '#/definitions/middleware.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/middleware.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Pause workflow
      tags:
      - Workflows
  /workflows/{id}/resume:
    post:
      consumes:
      - application/json
      description: Resume a paused workflow execution
      parameters:
      - description: Workflow ID
        in: path
        name: id
        required: true
        type: string
      - description: Language preference (en, vi)
        in: header
        name: X-Language
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Workflow resumed successfully
          schema:
            allOf:
            - $ref: '#/definitions/middleware.SuccessResponse'
            - properties:
                data:
                  additionalProperties: true
                  type: object
              type: object
        "400":
          description: Invalid workflow ID
          schema:
            $ref: '#/definitions/middleware.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middleware.ErrorResponse'
        "404":
          description: Workflow not found
          schema:
            $ref: '#/definitions/middleware.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/middleware.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Resume workflow
      tags:
      - Workflows
  /workflows/{id}/status:
    get:
      consumes:
      - application/json
      description: Retrieve the current status of a workflow execution
      parameters:
      - description: Workflow ID
        in: path
        name: id
        required: true
        type: string
      - description: Language preference (en, vi)
        in: header
        name: X-Language
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Workflow status retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/middleware.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/workflow.WorkflowStatus'
              type: object
        "400":
          description: Invalid workflow ID
          schema:
            $ref: '#/definitions/middleware.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middleware.ErrorResponse'
        "404":
          description: Workflow not found
          schema:
            $ref: '#/definitions/middleware.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/middleware.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get workflow status
      tags:
      - Workflows
  /workflows/{id}/terminate:
    post:
      consumes:
      - application/json
      description: Terminate a running workflow execution
      parameters:
      - description: Workflow ID
        in: path
        name: id
        required: true
        type: string
      - description: Termination reason
        in: body
        name: reason
        required: true
        schema:
          additionalProperties:
            type: string
          type: object
      - description: Language preference (en, vi)
        in: header
        name: X-Language
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Workflow terminated successfully
          schema:
            allOf:
            - $ref: '#/definitions/middleware.SuccessResponse'
            - properties:
                data:
                  additionalProperties: true
                  type: object
              type: object
        "400":
          description: Invalid workflow ID
          schema:
            $ref: '#/definitions/middleware.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middleware.ErrorResponse'
        "404":
          description: Workflow not found
          schema:
            $ref: '#/definitions/middleware.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/middleware.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Terminate workflow
      tags:
      - Workflows
  /loans/documents/upload:
    post:
      consumes:
      - application/json
      description: Upload a document for loan processing
      parameters:
      - description: Document upload request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/interfaces.DocumentUploadRequest'
      - description: Language preference (en, vi)
        in: header
        name: X-Language
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Document uploaded successfully
          schema:
            allOf:
            - $ref: '#/definitions/middleware.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/interfaces.DocumentUploadResponse'
              type: object
        "400":
          description: Invalid document data
          schema:
            $ref: '#/definitions/middleware.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middleware.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/middleware.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Upload document
      tags:
      - Documents
  /loans/applications/{id}/documents/status:
    get:
      consumes:
      - application/json
      description: Get document collection status for a loan application
      parameters:
      - description: Application ID
        in: path
        name: id
        required: true
        type: string
      - description: Language preference (en, vi)
        in: header
        name: X-Language
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Document status retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/middleware.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/interfaces.DocumentCollectionStatus'
              type: object
        "400":
          description: Invalid application ID
          schema:
            $ref: '#/definitions/middleware.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middleware.ErrorResponse'
        "404":
          description: Application not found
          schema:
            $ref: '#/definitions/middleware.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/middleware.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get document collection status
      tags:
      - Documents
  /loans/applications/{id}/documents/complete:
    post:
      consumes:
      - application/json
      description: Mark document collection as complete for a loan application
      parameters:
      - description: Application ID
        in: path
        name: id
        required: true
        type: string
      - description: Document completion request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/interfaces.DocumentCompletionRequest'
      - description: Language preference (en, vi)
        in: header
        name: X-Language
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Document collection completed successfully
          schema:
            allOf:
            - $ref: '#/definitions/middleware.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/interfaces.DocumentCompletionResponse'
              type: object
        "400":
          description: Invalid completion data
          schema:
            $ref: '#/definitions/middleware.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middleware.ErrorResponse'
        "404":
          description: Application not found
          schema:
            $ref: '#/definitions/middleware.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/middleware.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Complete document collection
      tags:
      - Documents
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
tags:
- description: Loan application management operations
  name: Applications
- description: Loan pre-qualification operations
  name: Pre-qualification
- description: Loan offer management operations
  name: Offers
- description: Administrative operations
  name: Admin
- description: Health check operations
  name: Health
- description: Comprehensive error handling with detailed validation information
  name: Error Handling
- description: Document management operations for loan applications
  name: Documents
